package PERSONAL_RESPONSABLE;

import java.util.List;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

import org.contenido.INICIO_SESIÓN.InicioSesion;
import org.contenido.controlador.controladorImpl.LoginControlador;
import org.contenido.excepcion.LoginExcepcion;
import org.contenido.utilidad.NotificacionUtil;
import org.contenido.PANEL_INICIO.PanelInicio;
import org.contenido.controlador.Controlador;
import org.contenido.controlador.controladorImpl.ResponsableControlador;
import org.contenido.controlador.controladorImpl.Rol_ResponsableControlador;
import org.contenido.dto.ResponsableDTO;
import org.contenido.dto.Rol_ResponsableDTO;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author SERT
 */
public class PanelResponsables extends javax.swing.JFrame {

    /**
     * Creates new form Personal
     */

    public PanelResponsables() {
        initComponents();
            Cargo.setModel(new DefaultComboBoxModel<Rol_ResponsableDTO>());
        cargarResponsablesEnTabla();
        Cargo.removeAllItems();
        // Opción “Todos”
        Rol_ResponsableDTO todos = new Rol_ResponsableDTO();
        todos.setId(0);
        todos.setNombreRol("Todos");
        todos.setDescripcion("");
        Cargo.addItem(todos);

        // Ahora los roles reales
        Controlador<Rol_ResponsableDTO> controladorRol = new Rol_ResponsableControlador();
        List<Rol_ResponsableDTO> listaRoles = controladorRol.listarTodo();
        for (Rol_ResponsableDTO rol : listaRoles) {
            Cargo.addItem(rol);
        }
        cargarRolesAlComboBox();

        Nombre_Filtro.getDocument().addDocumentListener(new DocumentListener() {
        public void insertUpdate(DocumentEvent e){ filtrarResponsables();}
        public void removeUpdate(DocumentEvent e){ filtrarResponsables();}
        public void changedUpdate(DocumentEvent e){ filtrarResponsables();}

        });
    
    }
    

    
    Controlador<ResponsableDTO> controlador = new ResponsableControlador();
    List<ResponsableDTO> listaResponsables = controlador.listarTodo();
    
    private void cargarResponsablesEnTabla() {
    // Crear el modelo de la tabla con los nombres de columnas
    DefaultTableModel modelo = new DefaultTableModel(
        new String[]{"Nombre", "DNI", "Correo", "Cargo", "Usuario", "Contraseña", "Descripción"}, 0
    );

    for (ResponsableDTO responsable : listaResponsables) {
        modelo.addRow(new Object[]{
            responsable.getNombre(),
            responsable.getDni(),
            responsable.getEmail(),
            responsable.getRol_responsableDTO().getNombreRol(),
            responsable.getUsuario(),
            responsable.getContrsena(),
            responsable.getRol_ResponsableDTO().getDescripcion()
        });
    }

    Tabla_Lista_Responsable.setModel(modelo);
    }
    
    private void filtrarResponsables() {
    String nombreFiltro = Nombre_Filtro.getText().trim().toLowerCase();
    Rol_ResponsableDTO rolSeleccionado = (Rol_ResponsableDTO) Cargo.getSelectedItem();
    int rolId = (rolSeleccionado != null) ? rolSeleccionado.getId() : 0;

    // 1) Creamos el modelo, SIN asignarlo todavía a la tabla
    DefaultTableModel modelo = new DefaultTableModel(
        new String[] {"Nombre", "DNI", "Correo", "Cargo", "Usuario", "Contraseña", "Descripción"}, 
        0
    );

    // 2) Recorremos todos los responsables y añadimos sólo los que cumplan
    for (ResponsableDTO r : listaResponsables) {
        boolean matchNombre = r.getNombre().toLowerCase().contains(nombreFiltro);
        boolean matchRol    = (rolId == 0) || (r.getRol_responsableDTO().getId() == rolId);

        if (matchNombre && matchRol) {
            modelo.addRow(new Object[]{
                r.getNombre(),
                r.getDni(),
                r.getEmail(),
                r.getRol_responsableDTO().getNombreRol(),
                r.getUsuario(),
                r.getContrsena(),
                r.getRol_responsableDTO().getDescripcion()
            });
        }
    }
    

    // 3) ¡Sólo aquí asignamos el modelo a la tabla!
    Tabla_Lista_Responsable.setModel(modelo);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Nombre_Filtro = new javax.swing.JTextField();
        Cargo = new javax.swing.JComboBox<>();
        AñadirRegistro = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Modificar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla_Lista_Responsable = new org.jdesktop.swingx.JXTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Gestión de Encargados");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        jLabel4.setText("Gestiona los responsables a cargo de los bienes patrimoniales");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Buscar por nombre del encargado");

        Nombre_Filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nombre_FiltroActionPerformed(evt);
            }
        });

        Cargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargoActionPerformed(evt);
            }
        });

        AñadirRegistro.setBackground(new java.awt.Color(255, 102, 0));
        AñadirRegistro.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AñadirRegistro.setForeground(new java.awt.Color(255, 255, 255));
        AñadirRegistro.setText("Registrar");
        AñadirRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirRegistroActionPerformed(evt);
            }
        });

        Modificar.setBackground(new java.awt.Color(255, 102, 0));
        Modificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Modificar.setForeground(new java.awt.Color(255, 255, 255));
        Modificar.setText("Modificar");
        Modificar.setActionCommand("✓ Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cargo");

        Modificar1.setBackground(new java.awt.Color(255, 102, 0));
        Modificar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Modificar1.setForeground(new java.awt.Color(255, 255, 255));
        Modificar1.setText("Eliminar");
        Modificar1.setActionCommand("✓ Modificar");
        Modificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modificar1ActionPerformed(evt);
            }
        });

        Tabla_Lista_Responsable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "DNI", "Correo electrónico", "Cargo", "Usuario", "Contraseña", "Descripción"
            }
        ));
        jScrollPane2.setViewportView(Tabla_Lista_Responsable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AñadirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(415, 415, 415)
                        .addComponent(Modificar1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(73, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(280, 280, 280))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(Nombre_Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(Cargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(136, 136, 136)))
                        .addGap(56, 56, 56))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nombre_Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AñadirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Modificar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jButton1.setBackground(new java.awt.Color(255, 102, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Atrás");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Nombre_FiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nombre_FiltroActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Nombre_FiltroActionPerformed

    private void AñadirRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirRegistroActionPerformed
        // TODO add your handling code here:
        ModuloRegistroResponsables obj = new ModuloRegistroResponsables();
        obj.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_AñadirRegistroActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // TODO add your handling code here:
        // selecionar celda de tabla
        ResponsableDTO seleccionado = null;
        int filaSeleccionada = Tabla_Lista_Responsable.getSelectedRow();
        if (filaSeleccionada != -1) {
            // Buscar el nombre del responsable en la tabla seleccionada
            String nombreSeleccionado = Tabla_Lista_Responsable.getValueAt(filaSeleccionada, 0).toString();

            // Buscar en la lista original el responsable que tiene ese nombre (u otro campo único)
            for (ResponsableDTO r : listaResponsables) {
                if (r.getNombre().equals(nombreSeleccionado)) {
                    seleccionado = r;
                    break;
                }
            }
            // Formato de JOptionPanel
            JPasswordField passwordField = new JPasswordField();
            Object[] message = {
                    "Ingrese su contraseña:", passwordField
            };

            int option = JOptionPane.showConfirmDialog(null, message, "Reautenticación", JOptionPane.OK_CANCEL_OPTION);
            boolean esSuperUsuario = false;
            if (option == JOptionPane.OK_OPTION) {
                String contrasena = new String(passwordField.getPassword());
                esSuperUsuario = InicioSesion.controlador.accesoSoloSuperUsuario(contrasena);
                InicioSesion.dto.setContrsena(contrasena);

                // si es super usuario:
                if (esSuperUsuario){
                    // Abrir la nueva interfaz y pasarle el objeto
                    ModificarPersonal obj = new ModificarPersonal(seleccionado);
                    obj.setVisible(true);
                    dispose();
                }
            }
        } else {
            // si no esta selecionado la celda
            NotificacionUtil.mostrarMensajeAfirmacion("Debes seleccionar un responsable primero.");
        }
    }//GEN-LAST:event_ModificarActionPerformed

    private void Modificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modificar1ActionPerformed
        // TODO add your handling code here:


        int filaSeleccionada = Tabla_Lista_Responsable.getSelectedRow();

        if (filaSeleccionada != -1) {
            // Buscar el nombre del responsable en la tabla seleccionada
            String nombreSeleccionado = Tabla_Lista_Responsable.getValueAt(filaSeleccionada, 0).toString();

            // Buscar en la lista original el responsable que tiene ese nombre (u otro campo único)
            ResponsableDTO seleccionado = null;
            for (ResponsableDTO r : listaResponsables) {
                if (r.getNombre().equals(nombreSeleccionado)) {
                    seleccionado = r;
                    break;
                }
            }

        int resultado = JOptionPane.showConfirmDialog(
        this,
        "¿Está seguro de eliminar este responsable?",
        "Confirmar eliminación",
        JOptionPane.OK_CANCEL_OPTION
    );
        if (resultado != JOptionPane.OK_OPTION) return;

        // 1) Elimino en la base
        controlador.eliminar(seleccionado.getId());

        // 2) Refresco la lista en memoria
        listaResponsables = controlador.listarTodo();

        // 3) Repopulo la tabla (sin filtro)
        cargarResponsablesEnTabla();
        }
    }//GEN-LAST:event_Modificar1ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PanelInicio obj = new PanelInicio(InicioSesion.controlador);
        obj.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CargoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelResponsables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelResponsables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelResponsables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelResponsables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelResponsables().setVisible(true);
            }
        });
    }
    
    private void cargarRolesAlComboBox() {
    Controlador<Rol_ResponsableDTO> controladorRol = new Rol_ResponsableControlador();
    List<Rol_ResponsableDTO> listaRoles = controladorRol.listarTodo();

    Cargo.removeAllItems(); // Limpiamos antes
    Rol_ResponsableDTO todos = new Rol_ResponsableDTO();
        todos.setId(0);
        todos.setNombreRol("Todos");
        todos.setDescripcion("");
    Cargo.addItem(todos);
    for (Rol_ResponsableDTO rol : listaRoles) {
        Cargo.addItem(rol); // Agregamos cada rol al combo
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AñadirRegistro;
    private javax.swing.JComboBox<Rol_ResponsableDTO> Cargo;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton Modificar1;
    private javax.swing.JTextField Nombre_Filtro;
    private org.jdesktop.swingx.JXTable Tabla_Lista_Responsable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
